os: linux
dist: focal

# Choose a lightweight base image; we provide our own build tools.
language: generic

# Caching so the next build will be fast too.
cache:
  directories:
  - "$HOME/.stack"

# GHC depends on GMP. You can add other dependencies here as well.
addons:
  apt:
    packages:
    - libgmp-dev

# Create jobs for all recent LTS resolvers, nightly, and some special configurations
jobs:
  include:
  - name: "LTS 3.22 (7.10.2)" # crypto-enigma not in snapshot
    dist: trusty
    env: RESOLVER=lts-3.22    STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 6.35 (7.10.3)" # crypto-enigma not in snapshot
    dist: trusty
    env: RESOLVER=lts-6.35    STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 7.24 (8.0.1)"
    dist: xenial
    env: RESOLVER=lts-7.24    STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 9.21 (8.0.2)"
    dist: xenial
    env: RESOLVER=lts-9.21    STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 10.3 (8.2.2)"
    dist: bionic
    env: RESOLVER=lts-10.3    STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 11.22 (8.2.2)"
    dist: bionic
    env: RESOLVER=lts-11.22   STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 12.14 (8.4.3)"
    env: RESOLVER=lts-12.14   STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 12.26 (8.4.4)"
    env: RESOLVER=lts-12.26   STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 13.11 (8.6.3)"
    env: RESOLVER=lts-13.11   STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 13.19 (8.6.4)"
    env: RESOLVER=lts-13.19   STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 14.27 (8.6.5)"
    env: RESOLVER=lts-14.27   STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 15.3 (8.8.2)"
    env: RESOLVER=lts-15.3    STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 16.11 (8.8.3)"
    env: RESOLVER=lts-16.11    STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 16.31 (8.8.4)"
    env: RESOLVER=lts-16.31    STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 17.2 (8.10.3)"
    env: RESOLVER=lts-17.2    STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS 17.7 (8.10.4)"
    env: RESOLVER=lts-17.7    STACK_YAML=travis-stacks/resolver-only.yaml
  - name: "LTS Latest"
    env: RESOLVER=lts         STACK_YAML=travis-stacks/resolver-only.yaml
#  - name: "LTS Latest"
#    env: RESOLVER=lts         STACK_YAML=travis-stacks/resolver-only.yaml
#    os: osx
#    osx_image: xcode12.2
#  - name: "LTS Latest"
#    env: RESOLVER=lts         STACK_YAML=travis-stacks/resolver-only.yaml
#    os: windows
#    language: shell
  - name: "Stackage Nightly (excluded from Hackage branch tests)"
    env: RESOLVER=nightly     STACK_YAML=travis-stacks/resolver-only.yaml
    ghc-options:
      "$locals": -Wunsafe -Wunused-imports -Wdodgy-imports -Wdodgy-foreign-imports
      "$targets": -Wunsafe -Wunused-imports -Wdodgy-imports -Wdodgy-foreign-imports -Wall
    if: branch != "hackage"
  - name: "Stackage Nightly (excluded from Hackage branch tests)"
    env: RESOLVER=nightly     STACK_YAML=travis-stacks/resolver-only.yaml
    dist: bionic
    ghc-options:
      "$locals": -Wunsafe -Wunused-imports -Wdodgy-imports -Wdodgy-foreign-imports
      "$targets": -Wunsafe -Wunused-imports -Wdodgy-imports -Wdodgy-foreign-imports -Wall
    if: branch != "hackage"
#  - name: "Stackage Nightly (excluded from Hackage branch tests)"
#    env: RESOLVER=nightly     STACK_YAML=travis-stacks/resolver-only.yaml
#    os: osx
#    osx_image: xcode12.2
#    ghc-options:
#      "$locals": -Wunsafe -Wunused-imports -Wdodgy-imports -Wdodgy-foreign-imports
#      "$targets": -Wunsafe -Wunused-imports -Wdodgy-imports -Wdodgy-foreign-imports -Wall
#    if: branch != "hackage"
    # TBD - Update when Haskell for Mac updates -- https://community.hfm.io/hc/en-us/requests/795
#  - name: "Haskell for Mac (13.14/8.6.4; test LTS used by Haskell for Mac on macOS)"
#    env: RESOLVER=lts-13.14   STACK_YAML=travis-stacks/resolver-only.yaml
#    os: osx
#    osx_image: xcode12.2

# lts-0.7 - Fails on Travis (unsupported GHC on Travis)
# lts-2.22 - Fails on Travis (too old)
# lts-8.0  - Removed from most recents on Stackage; Unreliable/slow build on Travis

before_install:
# Download and unpack the stack executable -- https://docs.haskellstack.org/en/stable/travis_ci/?highlight=travis
- mkdir -p ~/.local/bin
- export PATH=$HOME/.local/bin:$PATH
# Aquire the stack aprioriate to the os used -- https://stackoverflow.com/a/52796679/656912
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then  brew update ; brew install stack ; fi
- if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then  travis_retry curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack' ;  fi
- stack --version

install:
# Build dependencies
- stack --resolver $RESOLVER --stack-yaml $STACK_YAML --no-terminal --install-ghc test --only-dependencies

script:
# Build the package, its tests, and its docs and run the tests
- stack --resolver $RESOLVER --stack-yaml $STACK_YAML --no-terminal --install-ghc test --haddock --no-haddock-deps
# List components explicitly; ignoring failure
- stack --resolver $RESOLVER --stack-yaml $STACK_YAML exec ghc-pkg list || true
# Run some example CLI commands
- stack --resolver $RESOLVER --stack-yaml $STACK_YAML exec -- enigma encode "c-β-V-VI-VIII CDTJ AE.BF.CM.DQ.HU.JN.LX.PR.SZ.VW 05.16.05.12" "FOLGENDES IST SOFORT BEKANNTZUGEBEN"
- stack --resolver $RESOLVER --stack-yaml $STACK_YAML exec -- enigma run "c-β-V-VI-VIII CDTJ AE.BF.CM.DQ.HU.JN.LX.PR.SZ.VW 05.16.05.12" -m "FOLGENDES IST SOFORT BEKANNTZUGEBEN" -f single -e -t
- stack --resolver $RESOLVER --stack-yaml $STACK_YAML exec -- enigma --version

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/33a1859c14283f0dbab6
    on_success: always
    on_failure: always
    on_start: never

## Deploy (tagged commits) to Hackage; generated by travis CLI
#before_deploy: "echo '=== BEGIN deployment ==='"
#deploy:
#  provider: hackage
#  username: Orome
#  password:
#    secure: lJTICRAD8m+NePYSnyol1TU1zAyuv9YUmR1mfqE5qTrJnauERarmMEVJXglQUASyAT+JfLSoRqJfQWcixE1YTmcXrijIxZicX7G/t6FqPrJDiz+7lpCg4sXBa4ZAbahwvprkBB1eJUN+/9MUjEeX8a+N/lT/hTvnoAFiM2SW1tfS9YuYTeKYCBNMgh6Li8X4cwvI0nsyWyDj7Q+2n1rti6yBSSt2NdXpxVUGzmn4TiDjbX6B3VNZSlwhMb7h9nw11Yf6UkbjI5r4G8eUAJ5o+YOpVGK41+2IXITrO6YnR7Ma3EmMiOADuG1KkJEUrc9juWy6RmjFO+Zs2YIHiYPKoLZXR1w1pRuSlre3vLJwMKj3nFF2aAgawzjqGpmtJlJLn1D+uIrMnUo5lNb4VNHDNTnlmnQAESZmK/lhhqOp/2CebVp0e2p2bjnJUHKVb3ptXmzek9ppS6T9fBhu9/am/4N3Yi1EUurlxVl0xE1eL/3zQX7vVwPrrjk6kDHgVqrlRDZWvf4/MBgyRUitE12w1oRr04cgcivtv2ipov30EdQoUpMy3ABq8EMITAFXTeNPWtEL+3XUqp9SQfxxnycK1Zm/xAsNgIDQl27xY+XYgF585A+cAkhjXkOhS2h7vDw7z2CXDpXcw46IcyoXiPI+9doLX9rTJF8rzJLVksGbPrE=
#  on:
#    repo: orome/crypto-enigma-hs
#    branch: hackage
#    tags: true
#after_deploy: "echo '=== END deployment ==='"
